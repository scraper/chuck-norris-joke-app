import React, { useState, useEffect } from "react";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import "bootstrap/dist/css/bootstrap.min.css";
import {
  InputGroup,
  Alert,
  Form,
  ListGroup,
  Button,
  Container,
  Row,
  Col,
} from "react-bootstrap";

export default function Home({ randomJoke, categories }) {
  const [selectedCategory, setSelectedCategory] = useState(categories[""]);
  const [currentJoke, setCurrentJoke] = useState(randomJoke.value);
  const [currentSearchQuery, setCurrentSearchQuery] = useState("");
  const [currentSearchRes, setCurrentSearchRes] = useState([]);

  const getJoke = async () => {
    if (selectedCategory && selectedCategory !== "random") {
      const res = await fetch(
        `https://api.chucknorris.io/jokes/random?category=${selectedCategory}`
      );
      const joke = await res.json();
      return setCurrentJoke(joke.value);
    }
    const res = await fetch(`https://api.chucknorris.io/jokes/random`);
    const joke = await res.json();
    return setCurrentJoke(joke.value);
  };
  const handleCategoryChange = (e) => {
    e.preventDefault();
    getJoke();
  };

  const findJoke = async () => {
    console.log("currentSearchQuery: ", currentSearchQuery);
    if (currentSearchQuery && currentSearchQuery.length > 2) {
      const res = await fetch(
        `https://api.chucknorris.io/jokes/search?query=${currentSearchQuery}`
      );
      const jokes = await res.json();
      return setCurrentSearchRes(jokes.result.slice(0, 5));
    }
    return setCurrentSearchRes([]);
  };
  useEffect(() => {
    findJoke();
  }, [currentSearchQuery]);

  const handleSearch = (e) => {
    e.preventDefault();
    findJoke();
  };

  return (
    <Container className="justify-content-md-center">
      <Head>
        <title>Chuck Norris React App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Row className="justify-content-md-center">
          <Image
            alt="Chuck Norris"
            src="/chucknorris_logo_coloured_small.png"
            width="360px"
            height="219px"
          />
          <h3 className={styles.title}>Welcome to Chuck Norris Jokes</h3>
        </Row>
        <Row className="justify-content-md-center">
          <Col md="auto">
            <Alert variant="success">{currentJoke}</Alert>
          </Col>
        </Row>
        <Row className="justify-content-md-center">
          <Col md="6">
            <Form.Label htmlFor="category-select">Select category</Form.Label>
            <InputGroup className="mb-3">
              <Form.Select
                id="category-select"
                value={selectedCategory}
                aria-label="Select joke category"
                onChange={(e) => setSelectedCategory(e.target.value)}
              >
                <option value="random">Random</option>
                {categories.map((category, index) => (
                  <option key={index} value={category}>
                    {category}
                  </option>
                ))}
              </Form.Select>
              <Button variant="primary" onClick={handleCategoryChange}>
                Get joke
              </Button>
            </InputGroup>
          </Col>
        </Row>

        <Row className="justify-content-md-center">
          <Col md="6">
            <InputGroup className="mb-3">
              <Form.Control
                type="text"
                placeholder="Search"
                value={currentSearchQuery}
                onChange={(e) => setCurrentSearchQuery(e.target.value)}
              />
              <Button variant="primary" onClick={handleSearch}>
                Find joke
              </Button>
            </InputGroup>
          </Col>
        </Row>
        <div>
          <br />
          <ListGroup>
            {currentSearchRes.map((res, index) => (
              <ListGroup.Item key={index}>{res.value}</ListGroup.Item>
            ))}
          </ListGroup>
        </div>
      </main>

      <footer className={styles.footer}>Franko</footer>
    </Container>
  );
}
export async function getServerSideProps() {
  const randomJokeRes = await fetch(
    "https://api.chucknorris.io/jokes/random"
  );
  const randomJoke = await randomJokeRes.json();
  const categoriesRes = await fetch(
    "https://api.chucknorris.io/jokes/categories"
  );
  const categories = await categoriesRes.json();

  return {
    props: {
      randomJoke,
      categories,
    },
  };
}
